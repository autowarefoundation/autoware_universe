name: Generate build cache

on:
  schedule:
    - cron: 0 0 * * * # every day at midnight UTC
  workflow_dispatch:

jobs:
  generate-cache:
    runs-on: "['self-hosted', 'Linux', 'X64']"
    container: ghcr.io/autowarefoundation/autoware:universe-devel
    env:
      rosdistro: humble
      container-suffix: ""
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Remove exec_depend
        uses: autowarefoundation/autoware-github-actions/remove-exec-depend@v1

      - name: Get self packages
        id: get-self-packages
        uses: autowarefoundation/autoware-github-actions/get-self-packages@v1

      - name: Create ccache directory
        run: |
          mkdir -p ${CCACHE_DIR}
          du -sh ${CCACHE_DIR} && ccache -s
        shell: bash

      - name: Attempt to restore ccache
        uses: actions/cache/restore@v4
        with:
          path: |
            /root/.ccache
          key: ccache-main-${{ runner.arch }}-${{ env.rosdistro }}-${{ github.sha }}
          restore-keys: |
            ccache-main-${{ runner.arch }}-${{ env.rosdistro }}-

      - name: Limit ccache size
        run: |
          rm -f "${CCACHE_DIR}/ccache.conf"
          echo -e "# Set maximum cache size\nmax_size = 600MB" >> "${CCACHE_DIR}/ccache.conf"
        shell: bash

      - name: Show ccache stats before build and reset stats
        run: |
          du -sh ${CCACHE_DIR} && ccache -s
          ccache --zero-stats
        shell: bash

      - name: Export CUDA state as a variable for adding to cache key
        run: |
          build_type_cuda_state=nocuda
          if [[ "${{ env.container-suffix }}" == "-cuda" ]]; then
            build_type_cuda_state=cuda
          fi
          echo "BUILD_TYPE_CUDA_STATE=$build_type_cuda_state" >> "${GITHUB_ENV}"
          echo "::notice::BUILD_TYPE_CUDA_STATE=$build_type_cuda_state"
        shell: bash

      - name: Prepare build_depends.repos file
        uses: ./.github/actions/combine-repos-action
        with:
          base_file: build_depends_humble.repos
          overlay_file: build_depends_nightly.repos
          output_file: build_depends.repos

      - name: Resolve exact dependencies
        run: |
          vcs import dependency_ws < build_depends.repos
          vcs export dependency_ws --exact-with-tags > build-depends-exact.repos

      - name: Build dependencies
        if: ${{ steps.get-self-packages.outputs.self-packages != '' }}
        uses: autowarefoundation/autoware-github-actions/colcon-build@v1
        with:
          rosdistro: ${{ env.rosdistro }}
          target-packages: ${{ steps.get-self-packages.outputs.self-packages }}
          build-depends-repos: build_depends.repos
          cache-key-element: ${{ env.BUILD_TYPE_CUDA_STATE }}
          base-paths: ${{ dependency_ws }}

      - name: Save deps cache
        uses: actions/cache/save@v4
        with:
          path: |
            install
            build
          key: deps-ws-${{ runner.arch }}-${{ env.rosdistro }}-${{ env.BUILD_TYPE_CUDA_STATE }}-${{ hashFiles('build-depends-exact.repos') }}
